[
  {
    "objectID": "qmd/1_test.html#quarto",
    "href": "qmd/1_test.html#quarto",
    "title": "2  main",
    "section": "2.1 Quarto",
    "text": "2.1 Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "qmd/1_test.html#running-code",
    "href": "qmd/1_test.html#running-code",
    "title": "2  main",
    "section": "2.2 Running Code",
    "text": "2.2 Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mutation Load in Black Grouse",
    "section": "",
    "text": "1 Introduction\nThis webpage contains a summary of the workflow used in the manuscript “Predicted deleterious mutations reveal the genomic mechanisms underlying fitness variation in a lekking bird”, Chen et al. 2024 (in preparation). Please see the github repository ([https://github.com/rshuhuachen/ms_load_grouse]) for all scripts and more detailed descriptions of the data and analyses.\n\n\n\nBlack grouse\n\n\n\n\n2 Main goals\nIn the current study, we used a long-term dataset to (i) quantify the fitness effects of homozygous and heterozygous individual genomic mutation loads; (ii) compare the fitness effects of deleterious mutations in coding versus noncoding regions; and (iii) unravel the behavioural and / or ornamental pathways through which deleterious mutations impact lifetime reproductive success. We used whole genome resequencing, phenotypic and fitness data of 190 male black grouse sampled annually across five study sites in Central Finland.\nMutation load can be defined as a statistic that summarizes the selection and dominance coefficients of deleterious mutations as a function of their frequencies in a population (Bertorelle et al. 2022). As we do not have selection and dominance coefficients of mutations in wild populations, we use a proxy for mutation load calculated as the number of deleterious mutations for a given individual.\nThere are different types of load, e.g. the realized load (expressed load) which reduces fitness in the current generation, and the potential/masked load (inbreeding load) which quantifies the potential fitness loss due to (partially) recessive deleterious mutations that may become expressed in future generations depending on the population’s demography. The genetic load is made up of realized plus masked load.\n\n\n3 Calculating genetic load\nThere are generally two most commonly used computational approaches to identify putative deleterious variants from whole genome re-sequencing data. In general, these tools attempt to predict the effect of a mutation on the function or evolutionary fitness of a protein. The two are distinct but can be related; for instance, a loss of function mutation will be strongly selected against if the gene is essential but will tend to be less evolutionary deleterious if the gene is non-essential or if the variant only slightly alters protein function. We used two common approaches:\n\nGenomic Evolutionary Rate Profiling (GERP): This approach uses multi-species genome alignments to identify genomic sites that are strongly conserved over millions of years of evolution, as non-synonymous mutations at these sites have a high likelihood of being deleterious. (Davydov et al. 2010)\nSNP effect (SnpEff): This approach predicts the consequences of genomic variants on protein sequences and identifies loss of function and missense variants. (Cingolani et al. 2012).\n\n\n\n4 This webpage\nOn this webpage, you will find some of the scripts for the analysis performed in this study. Note that not all bioinformatic steps are put on here (only from inferring mutations onwards). You can find the complete set of analyses with their explanations in the github repo.\n\n\n\n\nBertorelle, Giorgio, Francesca Raffini, Mirte Bosse, Chiara Bortoluzzi, Alessio Iannucci, Emiliano Trucchi, Hernán E. Morales, and Cock van Oosterhout. 2022. “Genetic Load: Genomic Estimates and Applications in Non-Model Animals.” Nature Reviews Genetics 23 (8): 492–503. https://doi.org/10.1038/s41576-022-00448-x.\n\n\nCingolani, Pablo, Adrian Platts, Le Lily Wang, Melissa Coon, Tung Nguyen, Luan Wang, Susan J. Land, Xiangyi Lu, and Douglas M. Ruden. 2012. “A Program for Annotating and Predicting the Effects of Single Nucleotide Polymorphisms, SnpEff.” Fly 6 (2): 80–92. https://doi.org/10.4161/fly.19695.\n\n\nDavydov, Eugene V., David L. Goode, Marina Sirota, Gregory M. Cooper, Arend Sidow, and Serafim Batzoglou. 2010. “Identifying a High Fraction of the Human Genome to Be Under Selective Constraint Using GERP++.” Edited by Wyeth W. Wasserman. PLoS Computational Biology 6 (12): e1001025. https://doi.org/10.1371/journal.pcbi.1001025."
  },
  {
    "objectID": "qmd/1_inbreeding.html#inbreeding",
    "href": "qmd/1_inbreeding.html#inbreeding",
    "title": "2  Inbreeding",
    "section": "2.1 Inbreeding",
    "text": "2.1 Inbreeding"
  },
  {
    "objectID": "qmd/1_snpeff.html#introduction",
    "href": "qmd/1_snpeff.html#introduction",
    "title": "2  SnpEff",
    "section": "2.1 Introduction",
    "text": "2.1 Introduction\nSnpEff annotates genetic variants and predicts the functional effects. The output includes a VCF file with annotations that indicate what kind of mutation it is (e.g. introduction of a stop codon) and the predicted effect (low, moderate, high, modifier). In this study, focus on high impact mutations, which includes loss of function (LoF) and nonsense mediate decay (NMD) mutations."
  },
  {
    "objectID": "qmd/1_snpeff.html#methods",
    "href": "qmd/1_snpeff.html#methods",
    "title": "2  SnpEff",
    "section": "2.2 Methods",
    "text": "2.2 Methods\n\n2.2.1 Building the database\nAs the black grouse (Lyrurus tetrix) is no common model species with a pre-built database, a custom database was built from the annotation files in .gff format provided by Cantata Bio.\nTo build a custom database, five files are required: the gff file containing the gene annotation, the reference genome, and then three files containing information about the coding regions (cds.fa; a fasta file containing the coding regions only), the genes (genes.fa; a fasta file containing the genes only) and a file with the protein sequences (proteins.fa; a fasta file with the protein sequences). Two softwares were used to construct these three fasta files: gff3_to_fasta and AGAT.\n```{bash}\ngff3_to_fasta -g data/genomic/refgenome/PO2979_Lyrurus_tetrix_black_grouse.annotation.gff \\\n    -f data/genomic/refgenome/PO2979_Lyrurus_tetrix_black_grouse.RepeatMasked.fasta -st cds -d complete -o data/genomic/refgenome/lyrurus_tetrix/cds.fa \n\ngff3_to_fasta -g data/genomic/refgenome/PO2979_Lyrurus_tetrix_black_grouse.annotation.gff \\\n    -f data/genomic/refgenome/PO2979_Lyrurus_tetrix_black_grouse.RepeatMasked.fasta -st gene -d complete -o data/genomic/refgenome/lyrurus_tetrix/genes.fa \n```\nSimilarly, the protein sequences were constructed with AGAT\n```{bash}\nagat_sp_extract_sequences.pl --gff data/genomic/refgenome/PO2979_Lyrurus_tetrix_black_grouse.annotation.gff -f \\\n    data/genomic/refgenome/PO2979_Lyrurus_tetrix_black_grouse.RepeatMasked.fasta -p -o \\\n    data/genomic/refgenome/lyrurus_tetrix/protein.fa\n```\nThen, the database was built (and automatically checked).\n```{bash}\njava -jar snpEff.jar build -gff3 -v data/genomic/refgenome/lyrurus_tetrix\n```\nOnce the database is ready, we can run SnpEff to create the annotated vcf file.\n```{bash}\njava -Xmx8g -jar snpEff.jar ann -stats  \\\n-no-downstream -no-intergenic -no-intron -no-upstream -no-utr -v \\\nlyrurus_tetrix data/genomic/intermediate/ltet_snps_filtered.vcf &gt; data/genomic/intermediate/snpef/ltet_ann_snp_output.vcf\n```\n\n\n2.2.2 Ancestral alleles\nSnpEff annotates mutations according to the change from the reference allele to the focal allele. Hence, it assumes that the reference allele is the ‘better’ one and that a mutation that changes the transcription of this reference allele is detrimental. To allow this assumption to be better met, we used the ancestral genome as a reference, instead of the reference genome itself (i.e. we polarized the genome). This ancestral genome is constructed by cactus, and represents the most recent common ancestor between black grouse (L. tetrix) and Lagoplus leucura (white tailed ptarmigan). This way, any derived allele was assumed to be ‘deleterious’ compared to the ancestral allele, as opposed to a reference-non reference comparison.\n\n\n2.2.3 Filtering\nWe then used SnpSift to filter annotated mutations based on the four impact categories: modifier, low, moderate and high impact using the following commands.\n```{bash}\n\n## High impact\nzcat output/ancestral/ltet_filtered_ann_aa.vcf.gz | java -jar src/SnpSift.jar filter \" ( ANN[*].IMPACT = 'HIGH' )\" &gt; data/genomic/intermediate/snpef/ltet_ann_aa_snp_output_HIGH.vcf\ngzip data/genomic/intermediate/snpef/ltet_ann_aa_snp_output_HIGH.vcf\n\n## Moderate\nzcat output/ancestral/ltet_filtered_ann_aa.vcf.gz | java -jar src/SnpSift.jar filter \" ( ANN[*].IMPACT = 'MODERATE')\" &gt; data/genomic/intermediate/snpef/ltet_ann_aa_snp_output_moderate.vcf\ngzip data/genomic/intermediate/snpef/ltet_ann_aa_snp_output_moderate.vcf\n\n## Low\nzcat output/ancestral/ltet_filtered_ann_aa.vcf.gz | java -jar src/SnpSift.jar filter \" ( ANN[*].IMPACT = 'LOW') \" &gt; data/genomic/intermediate/snpef/ltet_ann_aa_snp_output_low.vcf\ngzip data/genomic/intermediate/snpef/ltet_ann_aa_snp_output_low.vcf\n\n```"
  },
  {
    "objectID": "qmd/references.html",
    "href": "qmd/references.html",
    "title": "References",
    "section": "",
    "text": "Bertorelle, Giorgio, Francesca Raffini, Mirte Bosse, Chiara Bortoluzzi,\nAlessio Iannucci, Emiliano Trucchi, Hernán E. Morales, and Cock van\nOosterhout. 2022. “Genetic Load: Genomic Estimates and\nApplications in Non-Model Animals.” Nature Reviews\nGenetics 23 (8): 492–503. https://doi.org/10.1038/s41576-022-00448-x.\n\n\nCingolani, Pablo, Adrian Platts, Le Lily Wang, Melissa Coon, Tung\nNguyen, Luan Wang, Susan J. Land, Xiangyi Lu, and Douglas M. Ruden.\n2012. “A Program for Annotating and Predicting the Effects of\nSingle Nucleotide Polymorphisms, SnpEff.”\nFly 6 (2): 80–92. https://doi.org/10.4161/fly.19695.\n\n\nDavydov, Eugene V., David L. Goode, Marina Sirota, Gregory M. Cooper,\nArend Sidow, and Serafim Batzoglou. 2010. “Identifying a\nHigh Fraction of the Human Genome to Be Under\nSelective Constraint Using GERP++.” Edited by Wyeth\nW. Wasserman. PLoS Computational Biology 6 (12): e1001025. https://doi.org/10.1371/journal.pcbi.1001025."
  },
  {
    "objectID": "qmd/1_snpeff.html#results",
    "href": "qmd/1_snpeff.html#results",
    "title": "2  SnpEff",
    "section": "2.3 Results",
    "text": "2.3 Results\nWe identified 5,341 high impact mutations:\n\n\n\nSnpEff annotation\n\n\nExisting of mostly LoF mutations and gained stop codons (non-mutually exclusive)\n\n\n\nDetailed SnpEff annotation\n\n\nThe mutations in the ‘high impact’ category were used to calculate individual genomic mutation load estimates."
  }
]