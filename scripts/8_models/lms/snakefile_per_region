"""
snakemake --snakefile scripts/8_models/lms/snakefile_per_region -n 
snakemake --snakefile scripts/8_models/lms/snakefile_per_region --jobs 8 -p --default-resources mem_mb=51200 --use-conda --rerun-triggers mtime --latency-wait 10 --rerun-incomplete

snakemake --jobs 50 --snakefile scripts/8_models/lms/snakefile_per_region \
    --latency-wait 30 \
    -p \
    --default-resources mem_mb=51200 \
    --use-conda \
    --rerun-triggers mtime \
    --cluster '
      sbatch \
        --export=ALL \
        -n {threads} \
        -e logs/{name}.{jobid}.err \
        -o logs/{name}.{jobid}.out \
        --mem={resources.mem_mb} ' \
        --jn bayes_model.{name}.{jobid}.sh \
        --rerun-incomplete
"""

REGIONS=["promoter","tss","exon","intron"]
METHODS=["high","gerp45"]

rule all:
    input:
        "scripts/8_models/lms/model_total_regions.R",
        expand("output/models/per_gene_region/lms_total_{method}_{region}.RData", region=REGIONS, method=METHODS)

rule run_bayes_total:
    input: 
        rscript = "scripts/8_models/lms/model_total_regions.R"
    output:
        model = "output/models/per_gene_region/lms_total_{method}_{region}.RData"
    log: "logs/bayesmodel_total_{method}_{region}.log"
    params:
      iter = 1000000,
      burn = 500000,
      thin = 1000
    shell:
        """
        Rscript --vanilla {input.rscript} {wildcards.method} {wildcards.region} {output.model} {params.iter} {params.burn} {params.thin} &> {log}
        """
