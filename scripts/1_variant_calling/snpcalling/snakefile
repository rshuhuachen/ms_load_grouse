'''
snakemake --snakefile scripts/1_variant_calling/snpcalling/snakefile \
  --jobs 8 \
  -p \
  --default-resources mem_mb=200 \
  --cluster '
     qsub \
     -V -cwd \
     -P fair_share \
     -l idle=1 \
     -l si_flag=1 \
     -pe multislot {threads} \
     -l vf={resources.mem_mb} \
     -l vf=0:0:30'

'''

import os

FILE = ["D154259k_E100041924_L01_ANIscleR181601-729","D154280_E100046281_L01_LYRfjwqR198689-701","D154299k_E100048304_L01_ANIqvhbR216095-611","D167k_E100037246_L1_ANIbthxR167779-741","D170k_E100037246_L1_ANIbthxR167780-744","D211308_E100046281_L01_LYRfjwqR198690-609","D211312k_E100046248_L01_LYRfjwqR198707-411","D211320_E100046281_L01_LYRfjwqR198691-614","D211334k_E100048304_L01_ANIqvhbR216096-621","D211341_E100046281_L01_LYRfjwqR198692-624","D211349_E100046281_L01_LYRfjwqR198693-634","D211350_E100042370_L01_ANIscleR181526-750","D211374_E10004both_L01_ANIscleR181527-751","D211385_E100046281_L01_LYRfjwqR198694-645","D211401_E100046281_L01_LYRfjwqR198695-650","D211403_E100044898_L01_merge","D211411_E100042332_L01_ANIscleR181534-758","D211412_E10004both_L01_ANIscleR181528-752","D211431k_E100041924_L01_ANIscleR181602-730","D211435k_E100041924_L01_ANIscleR181603-731","D211438_E100042332_L01_ANIscleR181535-759","D211445k_E100041924_L01_ANIscleR181604-732","D211450_E100042332_L01_ANIscleR181536-760","D211451_E100041340_L01_ANIscleR181529-753","D211456_E100041340_L01_ANIscleR181530-754","D211461_E100042332_L01_ANIscleR181531-755","D211474_E100046281_L01_LYRfjwqR198682-608","D211478_E100042332_L01_ANIscleR181532-756","D211482_E100042332_L01_ANIscleR181533-757","D211489k_E100041924_L01_ANIscleR181605-733","D211490_E100046281_L01_LYRfjwqR198683-613","D217810_E100046281_L01_LYRfjwqR198684-623","D217818_E100046281_L01_LYRfjwqR198685-633","D217821_E100046248_L01_LYRfjwqR198716-610","D217831k_E100048304_L01_ANIqvhbR216097-631","D217835_E100046248_L01_LYRfjwqR198714-604","D217864_E100046281_L01_LYRfjwqR198686-642","D217870_E100046281_L01_LYRfjwqR198687-649","D217891k_E100041924_L01_ANIscleR181606-734","D217896_E100041924_L01_ANIscleR181619-748","D217897k_E100041924_L01_ANIscleR181607-735","D217910k_E100041924_L01_ANIscleR181608-736","D217911k_E100048304_L01_ANIqvhbR216098-643","D217932_E100046248_L01_LYRfjwqR198717-616","D217947k_E100046248_L01_LYRfjwqR198699-402","D217949k_E100042332_L01_ANIscleR181537-761","D217961k_E100046248_L01_LYRfjwqR198700-403","D217964k_E100042332_L01_ANIscleR181538-764","D217965k_E100046248_L01_LYRfjwqR198701-404","D217969k_E100048304_L01_ANIqvhbR216099-646","D217977k_E100048228_L01_ANIqvhbR216079-635","D217993_E100046281_L01_LYRfjwqR198688-658","D229025_E100046248_L01_LYRfjwqR198719-619","D229032k_E100046248_L01_LYRfjwqR198708-412","D229043k_E100041924_L01_ANIscleR181613-741","D229051k_E100046248_L01_LYRfjwqR198709-413","D229054k_E100046248_L01_LYRfjwqR198711-415","D229055k_E100048217_L01_ANIqvhbR216100-656","D229056_E100048217_L01_ANIqvhbR216104-622","D229063k_E100048217_L01_ANIqvhbR216101-703","D229082k_E100041924_L01_ANIscleR181614-742","D229093k_E100041924_L01_ANIscleR181615-743","D229096k_E100041924_L01_ANIscleR181609-737","D229097_E100041924_L01_ANIscleR181620-749","D229103k_E100041924_L01_ANIscleR181610-738","D229126_E100048217_L01_ANIqvhbR216105-632","D229133_E100046248_L01_LYRfjwqR198718-618","D229154k_E100042332_L01_ANIscleR181544-770","D229155_E100041924_L01_ANIscleR181621-750","D229160k_E100041924_L01_ANIscleR181611-739","D229161k_E100041924_L01_ANIscleR181612-740","D229162k_E100042332_L01_ANIscleR181545-771","D229164_E100046248_L01_LYRfjwqR198715-605_repaired","D229165_E100046248_L01_LYRfjwqR198720-620","D229186_E100048217_L01_ANIqvhbR216102-608","D229192k_E100046248_L01_LYRfjwqR198697-702_repaired","D229193k_E100046248_L01_LYRfjwqR198698-401","D229512_E100041924_L01_ANIscleR181622-751","D229599k_E100041924_L01_ANIscleR181599-726","D229633_E100037246_L1_ANIbthxR167786-753","D229648k_E100048304_L01_ANIqvhbR216086-682","D229658k_E100048304_L01_ANIqvhbR216087-686","D229676k_E100042332_L01_ANIscleR181539-765","D229679_E100048217_L01_ANIqvhbR216106-645","D229705k_E100048228_L01_ANIqvhbR216080-636","D229707k_E100042332_L01_ANIscleR181546-606","D229714k_E100048228_L01_ANIqvhbR216081-650","D229716k_E100041398_L01_ANIscleR181540-766","D229718k_E100041398_L01_ANIscleR181541-767","D229721k_E100042332_L01_ANIscleR181556-622","D229734k_E100042332_L01_ANIscleR181542-768","D229737k_E100042332_L01_ANIscleR181557-632","D229740_E100037246_L1_ANIbthxR167793-766","D229742k_E100048228_L01_ANIqvhbR216082-660","D229759k_E100042332_L01_ANIscleR181558-643","D229770k_E100042332_L01_ANIscleR181543-769","D229771k_E100048304_L01_ANIqvhbR216083-666","D229772_E100037246_L1_ANIbthxR167795-768","D229775_E100046248_L01_LYRfjwqR198712-416","D229776k_E100048304_L01_ANIqvhbR216084-674","D229780_E100041924_L01_ANIscleR181616-744","D229783k_E100048304_L01_ANIqvhbR216085-681","D229784k_E100046248_L01_LYRfjwqR198706-410","D237206k_E100042332_L01_ANIscleR181559-648","D237232k_E100041398_L01_ANIscleR181560-657","D237233_E100041924_L01_ANIscleR181617-746","D237235k_E100041398_L01_ANIscleR181561-702","D237258_E100041924_L01_ANIscleR181618-747","D237276_E100048217_L01_ANIqvhbR216103-612","D237277_E100046248_L01_LYRfjwqR198713-603","D237278k_E100042332_L01_ANIscleR181547-611","D237300k_E100042332_L01_ANIscleR181548-621","D237304k_E100048304_L01_ANIqvhbR216088-691","D237307_E100046248_L01_LYRfjwqR198721-625","D237310k_E100048304_L01_ANIqvhbR216089-692","D237311_E100048228_L01_ANIqvhbR216107-648","D237313k_E100041398_L01_ANIscleR181562-401","D237325k_E100041398_L01_ANIscleR181563-402","D237327k_E100042332_L01_ANIscleR181549-631","D237337k_E100041398_L01_ANIscleR181564-403","D237339k_E100041398_L01_ANIscleR181565-404","D237340k_E100041398_L01_ANIscleR181566-405","D237352k_E100046248_L01_LYRfjwqR198702-405","D237355k_E100048304_L01_ANIqvhbR216090-693","D237360k_E100042332_L01_ANIscleR181550-642","D237361k_E100044901_L01_merge","D237369k_E100042332_L01_ANIscleR181551-646","D237370_E100048228_L01_ANIqvhbR216108-657","D237371_E100041924_L01_ANIscleR181623-752","D237378k_E100048304_L01_ANIqvhbR216091-709","D237379_E100046248_L01_LYRfjwqR198722-626","D237385k_E100048304_L01_ANIqvhbR216092-718","D237389k_E100048304_L01_ANIqvhbR216093-719","D237391_E100041924_L01_ANIscleR181624-753","D237394k_E100046248_L01_LYRfjwqR198704-407","D243901k_E100041398_L01_ANIscleR181567-410","D243906k_E100041398_L01_ANIscleR181568-655","D243907_E100041922_L01_ANIscleR181625-754","D243916k_E100041398_L01_ANIscleR181569-681","D243918k_E100041398_L01_ANIscleR181570-682","D243930k_E100041398_L01_ANIscleR181571-683","D243937k_E100041398_L01_ANIscleR181572-684","D243940k_E100041398_L01_ANIscleR181573-685","D243950k_E100041398_L01_ANIscleR181574-686","D244001k_E100042332_L01_ANIscleR181552-656","D244005k_E100042332_L01_ANIscleR181553-701","D244017k_E100044901_L01_merge","D244025k_E100041398_L01_ANIscleR181575-687","D244027k_E100041398_L01_ANIscleR181576-688","D244029_E100041922_L01_ANIscleR181626-755","D244032k_E100041398_L01_ANIscleR181577-690","D244033k_E100041398_L01_ANIscleR181578-691","D244042k_E100041398_L01_ANIscleR181579-692","D244045k_E100041398_L01_ANIscleR181580-693","D244054k_E100041398_L01_ANIscleR181581-695","D244055k_E100041398_L01_ANIscleR181582-703","D244073k_E100041398_L01_ANIscleR181583-706","D244077k_E100041398_L01_ANIscleR181584-707","D244083k_E100041398_L01_ANIscleR181585-708","D244086k_E100041398_L01_ANIscleR181586-709","D244087k_E100041398_L01_ANIscleR181587-710","D244090k_E100041398_L01_ANIscleR181588-713","D244112k_E100042332_L01_ANIscleR181554-607","D244123k_E100042332_L01_ANIscleR181555-612","D244139k_E100041398_L01_ANIscleR181589-714","D244143k_E100041398_L01_ANIscleR181590-716","D244144k_E100041398_L01_ANIscleR181591-717","D244147k_E100041398_L01_ANIscleR181592-718","D244162k_E100048304_L01_ANIqvhbR216094-606","D244163k_E100042332_L01_ANIscleR181593-719","D244168k_E100042332_L01_ANIscleR181594-720","D244179k_E100041924_L01_ANIscleR181596-722","D244183k_E100041924_L01_ANIscleR181597-723","D244186k_E100041924_L01_ANIscleR181598-724","D247994k_E100041924_L01_ANIscleR181600-728","D288_E100037246_L1_ANIbthxR167778-739","D299171_E100037246_L1_ANIbthxR167781-748","D376_E100037246_L1_ANIbthxR167777-738","D509k_E100037246_L1_ANIbthxR167782-749","D518k_E100037246_L1_ANIbthxR167783-750","D556k_E100037246_L1_ANIbthxR167790-760","D560k_E100037246_L1_ANIbthxR167784-751","D630k_E100037246_L1_ANIbthxR167785-752","D635k_E100037246_L1_ANIbthxR167787-754","D638k_E100037246_L1_ANIbthxR167788-758","D646k_E100037246_L1_ANIbthxR167791-764","D675k_E100037246_L1_ANIbthxR167789-759","D735k_E100037246_L1_ANIbthxR167792-765","D753k_E100037246_L1_ANIbthxR167794-767","D777k_E100037246_L1_ANIbthxR167796-769"]
FRR = ["1", "2"]

rule all:
        input:
	            expand("data/genomic/processed/{file}.sorted.bam",file=FILE),
                expand("data/genomic/processed/{file}.sorted.bam.bai",file=FILE),
                expand("data/genomic/processed/{file}.bam",file=FILE),
                expand("data/genomic/raw/resequencing/{file}_{frr}.fq.gz",file=FILE,frr=FRR),
                expand("data/genomic/raw/resequencing/{file}_1.fq.gz",file=FILE),
                expand("data/genomic/raw/resequencing/{file}_2.fq.gz",file=FILE)

rule alignment:
        input:
                readforward="data/genomic/raw/resequencing/{file}_1.fq.gz",
                readbackward="data/genomic/raw/resequencing/{file}_2.fq.gz"
        output:
                samfile="data/genomic/processed/{file}.sam"
        params:
                refgen="data/genomic/refgenome/PO2979_Lyrurus_tetrix_black_grouse.RepeatMasked.fasta"
        threads:
                12
        shell:
                """
                bwa mem -t {threads} {params.refgen} {input.readforward} {input.readbackward} > {output}
                """


rule sam_to_bam:
        input:
                samfile=rules.alignment.output.samfile
        output:
                bamfile="data/genomic/processed/{file}.bam"
        shell:
                """
                samtools view -S -b {input.samfile} > {output}
                """

rule sortbam:
        input:
                bamfile=rules.sam_to_bam.output.bamfile
        output:
                sortedbamfile="data/genomic/processed/{file}.sorted.bam"
        shell:
                """
                samtools sort {input.bamfile} -o {output}
                """

rule stats_alignment:
        input:
                sortedbamfile=rules.sortbam.output.sortedbamfile
        output:
                stats="output/genotyping/stats_alignment.txt"
        shell:
                """
                printf '\n' >> {output}
                echo {input.sortedbamfile} >> {output}
                samtools flagstat {input} >> {output}
                """

rule index_bamfiles:
        input:
                sortedbamfile=rules.sortbam.output.sortedbamfile
        output:
                sortedindexbamfile="data/genomic/processed/{file}.sorted.bam.bai"
        shell:
                """
                samtools index {input.sortedbamfile} {output}
                """

rule list_bamfiles:
	output: bamfiles="data/genomic/processed/list_bam_files.txt"
	shell: 
		"""
		ls -1 data/genomic/processed/*.sorted.bam > {output}
		"""

rule call_snps:
        input:
                bamfiles=rules.list_bamfiles.output.bamfiles
        output:
                SNPcalls="data/genomic/intermediate/rawSNPcalls.vcf"
        params:
                refgen="data/genomic/refgenome/PO2979_Lyrurus_tetrix_black_grouse.RepeatMasked.fasta",
                mincov=50,
                minq=20,
                threads=12
        shell:
                """
                bcftools mpileup -f {params.refgen} -a DP -C {params.mincov} -q {params.minq} -b {input.bamfiles} -I --threads {params.threads} | bcftools call -Ov -v -m -o {output}
                """

