n_mutations_per_impact <- left_join(n_mutations_per_impact, sum_gerp_per_snpeff, by = c("type" = "cat"))
n_mutations_per_impact$type <- factor(n_mutations_per_impact$type,
levels=c("Modifier", "Low", "Moderate", "High"))
# plot
ggplot(n_mutations_per_impact, aes(x = median, y = type)) +
geom_segment(aes(x = quant_25, xend = quant_75, y = type), col = alpha(clr_gerp, 0.7), size = 1) +
geom_point(size = 4, fill = clr_gerp, col = "black", shape=21) +
labs(x = "GERP score", title = "") +
geom_vline(xintercept = 0, col = "darkred", linetype = "dotted") +
theme(axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(0.75,0.75,0.75,0, "cm")) -> fig_gerp_per_snpeff
fig_gerp_per_snpeff
fig_countsnpef+fig_gerp_per_snpeff-> fig_count_snpef_plus_gerp
png(file = "plots/main/fig_2b.png", width=1000, height=800)
fig_count_snpef_plus_gerp
dev.off()
### Figure 2c: count of each SNPeff mutation variant ####
n_mutations_pertype <- subset(high_counts, !is.na(impact))
n_mutations_pertype$impact <- gsub("low", "Low", n_mutations_pertype$impact)
n_mutations_pertype$impact <- gsub("moderate", "Moderate", n_mutations_pertype$impact)
n_mutations_pertype$impact <- gsub("high", "High", n_mutations_pertype$impact)
n_mutations_pertype$impact <- gsub("modify", "Modifier", n_mutations_pertype$impact)
n_mutations_pertype$impact <- factor(n_mutations_pertype$impact,
levels = c("High", "Moderate", "Low", "Modifier"))
n_mutations_pertype$abb <- c("Downstream gene variant",
"5' UTR premature start codon",
"5' UTR variant",
"Initiator codon variant",
"Intron variant",
"Loss of Function",
"Missense variant",
"Nonsense mediated decay",
"Splice acceptor variant",
"Splice donor variant",
"Splice region variant",
"Start codon lost",
"Stop codon gained",
"Stop codon lost",
"Stop codon retained",
"Synonymous variant",
"3' UTR varaint",
"Upstream gene variant",
"Intergenic region")
ggplot(n_mutations_pertype, aes(x = reorder(abb, desc(n_mutations)),
y = n_mutations)) +
geom_col(aes(fill = impact, col = impact)) +
scale_y_log10(labels = c(expression(paste(~10^1)), expression(paste(~10^3)), expression(paste(~10^5))),
breaks = c(10, 1000, 100000))+
labs(y = expression('Number of SNPs (log'[10]*')'), fill = "Impact Class", x = "Mutation type")+
scale_fill_manual(values = alpha(c(clr_high, "#8EA4CC","#703D57",  "#FFCD70"), 0.7))+
scale_color_manual(values = c(clr_high, "#8EA4CC","#703D57",  "#FFCD70"))+
coord_flip() +geom_text(aes(label = prettyNum(n_mutations, big.mark = ",", scientific=F)),
hjust = 1.5, size = 6)+
guides(col="none") +
theme(legend.position = c(0.7,0.8)) -> fig_countsnpef_cat
fig_countsnpef_cat
png(file = "plots/main/fig_2c.png", width=600, height=800)
fig_countsnpef_cat
dev.off()
### Figure 2d and 2e: allele freq combining GERP and SnpEFf ####
# deleterious
load(file = "output/load/gerp/allelefreq_gerp5.derived.RData")
load(file = "output/load/snpeff/allelefreq_snpeff_high.derived.RData")
# neutral
load(file = "output/load/snpeff/allelefreq_snpeff_low.derived.RData") #allele_freq_low_long_derived
load(file = "output/load/gerp/allelefreq_gerp0.derived.RData") #allele_freq_gerp0_long_derived
allele_freq_gerp_long_derived$Method <- "GERP"
allele_freq_high_long_derived$Method <- "SnpEff"
allele_freq_gerp0_long_derived$Method <- "GERP"
allele_freq_low_long_derived$Method <- "SnpEff"
allele_freq_gerp_long_derived$Deleteriousness <- "GERP ≥ 4"
allele_freq_high_long_derived$Deleteriousness <- "High impact"
allele_freq_gerp0_long_derived$Deleteriousness <- "GERP < 0"
allele_freq_low_long_derived$Deleteriousness <- "Low impact"
names(allele_freq_gerp_long_derived)[7] <- "allele_freq"
names(allele_freq_high_long_derived)[7] <- "allele_freq"
names(allele_freq_gerp0_long_derived)[7] <- "allele_freq"
names(allele_freq_low_long_derived)[7] <- "allele_freq"
names(allele_freq_high_long_derived)[6] <- names(allele_freq_gerp_long_derived)[6]
names(allele_freq_low_long_derived)[6] <- names(allele_freq_gerp_long_derived)[6]
allelefreq <- rbind(allele_freq_gerp_long_derived, allele_freq_high_long_derived,
allele_freq_gerp0_long_derived, allele_freq_low_long_derived)
ggplot(subset(allelefreq, Method == "GERP"), aes(x = frequency, fill = Deleteriousness, col = Deleteriousness)) +
# scale_y_continuous(breaks=(c(50000, 100000, 150000)),
#                    labels=c("50 k", "100 k", "150 k"))+
geom_histogram(aes(y=after_stat(c(count[group==1]/sum(count[group==1]),
count[group==2]/sum(count[group==2]))*100)),
binwidth=0.07, position="dodge") +
scale_color_manual(values = c("grey", clr_gerp)) +
scale_fill_manual(values = alpha(c("grey", clr_gerp), 0.7))+
labs(x = "Allele frequency", y = "Percentage of SNPs", title = "GERP") +
theme(legend.position = c(0.8,0.9))-> fig_af_gerp
fig_af_gerp
png(file = "plots/main/fig_2d.png", width=600, height=600)
fig_af_gerp
=======
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0))) -> posterior_highregions
posterior_highregions
png(file = "plots/main/fig_2d.png", width=600, height=800)
posterior_highregions

dev.off()
snpeff_af <- subset(allelefreq, Method == "SnpEff")
snpeff_af$Deleteriousness <- factor(snpeff_af$Deleteriousness, levels = c("Low impact", "High impact"))
ggplot(snpeff_af, aes(x = frequency, fill = Deleteriousness, col = Deleteriousness)) +
geom_histogram(aes(y=after_stat(c(count[group==1]/sum(count[group==1]),
count[group==2]/sum(count[group==2]))*100)),
binwidth=0.07, position="dodge") +
scale_color_manual(values = c("grey", clr_high)) +
scale_fill_manual(values = alpha(c("grey", clr_high), 0.7))+
labs(x = "Allele frequency", y = "Frequency", title = "SnpEff") +
theme(legend.position = c(0.8,0.9))-> fig_af_high
png(file = "plots/main/fig_2e.png", width=600, height=600)
fig_af_high
dev.off()
### Figure 2f + 2g: histogram number of loci hom het ######
# high
high <- read.table("data/genomic/intermediate/snpef/ltet_ann_aa_snp_output_HIGH.vcf.gz")
source("scripts/7_calculate_load/function_calculate_load.R")
high_load <- calculate_load_snpeff(high, output_vcf = TRUE, loadtype = "high")
high <- high_load$load
high <- high %>% mutate(n_total_id_Heterozygosity = het_load*n_genotyped)
high <- high %>% mutate(n_total_id_Homozygosity = hom_load*n_genotyped)
high <- high %>% mutate(n_total_mutations = n_total_id_Heterozygosity+(n_total_id_Homozygosity*2))
sd(high$n_total_mutations)
mean(high$n_total_mutations)
high_loci <- gather(high[,c("id", "n_total_id_Heterozygosity", "n_total_id_Homozygosity")], type, n_loci, c(n_total_id_Heterozygosity:n_total_id_Homozygosity), factor_key = T)
high_loci$type <- gsub("n_total_id_", "", high_loci$type)
high_loci$type <- gsub("gosity", "gous", high_loci$type)
high_loci$type <- factor(high_loci$type, levels = c("Homozygous", "Heterozygous"))
ggplot(high_loci, aes(x = n_loci)) +
geom_histogram(bins = 30, position = "identity", aes(fill = type, col = type)) +
labs(x = "Number of loci", fill = "", y = "Number of individuals", title = "High impact SnpEff") +
theme(legend.position = "top") + guides(color="none")+
scale_fill_manual(values = c(alpha(clr_high, 0.8), alpha(clr_high, 0.4)))+
scale_color_manual(values = c(clr_high, alpha(clr_high, 0.6)))-> hist_n_high
hist_n_high
png(file = "plots/main/fig_2g.png", width=600, height=600)
hist_n_high
dev.off()
# gerp
gerp_scafs <- list.files(path = "output/gerp", pattern = "count_mutations*", full.names = T)
gerp_raw <- data.frame()
for (i in 1:length(gerp_scafs)){
scaf <- fread(gerp_scafs[i])
gerp_raw <- rbind(gerp_raw, scaf)
}
gerp <- gerp_raw %>% select(-c(scafno)) %>% group_by(id, gerp_cat) %>%
summarise(across(n_total:hom_data, sum))
gerp <- gerp %>% mutate(het_load = het_data / n_genotyped,
hom_load = hom_data / n_genotyped,
total_load = (het_data * 0.5 + hom_data) / n_genotyped)
gerp <- subset(gerp, gerp_cat == "4-5")
gerp_loci <- gather(gerp[,c("id", "het_data", "hom_data")], type, n_loci, c(het_data:hom_data), factor_key = T)
gerp_loci$type <- gsub("het_data", "Heterozygous", gerp_loci$type)
gerp_loci$type <- gsub("hom_data", "Homozygous", gerp_loci$type)
gerp_loci$type <- factor(gerp_loci$type, levels = c("Homozygous", "Heterozygous"))
gerp <- gerp %>% mutate(n_total_mutations = het_data+(hom_data*2))
sd(gerp$n_total_mutations)
mean(gerp$n_total_mutations)
ggplot(gerp_loci, aes(x = n_loci)) +
geom_histogram(bins = 30, position = "identity", aes(fill = type, col = type)) +
labs(x = "Number of loci", fill = "", y = "Number of individuals", title = "GERP ≥ 4") +
theme(legend.position = "top") + guides(color="none")+
scale_x_continuous(labels = c("30,000", "40,000", "50,000"), breaks=c(30000,40000,50000))+
scale_fill_manual(values = c(alpha(clr_gerp, 0.8), alpha(clr_gerp, 0.4)))+
scale_color_manual(values = c(clr_gerp, alpha(clr_gerp, 0.6))) -> hist_n_gerp
hist_n_gerp
png(file = "plots/main/fig_2f.png", width=600, height=600)
hist_n_gerp
dev.off()
### Combine in one figure ####
cowplot::plot_grid(fig_count_gerp_plus_high, fig_count_snpef_plus_gerp,
ncol = 1, labels = c("a", "b"), label_fontface = "plain", label_size = 22,
align = "hv", axis = "lb") -> fig_mut_1
cowplot::plot_grid(fig_mut_1, fig_countsnpef_cat,
labels = c("", "c"), label_fontface = "plain", label_size = 22,
ncol = 2) -> fig_mut_2
cowplot::plot_grid(fig_af_gerp,
fig_af_high,
hist_n_gerp,
hist_n_high,
labels = c("d", "e", "f", "g"), label_fontface = "plain", label_size = 22,
ncol = 4,
align = "hv", axis = "lb") -> fig_mut_3
cowplot::plot_grid(fig_mut_2, fig_mut_3, rel_heights = c(1, 0.5),
ncol = 1,
align = "hv", axis = "lb") -> fig_mut
png(file = "plots/main/fig_2.png", width=1400, height=1200)
fig_mut
dev.off()
ggplot(sum_high_per_gerp, aes(x = n_high, y = gerp_cat)) +
geom_col(fill = alpha(clr_high, 0.7), col = clr_high) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank()) +
scale_x_continuous(labels = c("0", "1k", "2k", "3k", "4k"), limits = c(0,4000),
breaks=c(0,1000,2000,3000,4000)) +
theme(plot.margin = margin(0.75, 0.75, 0.75, -1,unit= "cm"))+
geom_text(aes(label = prettyNum(n_high, big.mark=","), y = gerp_cat),
hjust=-0.2, size = 6) +
labs(x = "Number of high impact
SnpEff SNPs", title = "") -> fig_count_high_per_gerp
fig_count_high_per_gerp
fig_countgerp+ fig_count_high_per_gerp-> fig_count_gerp_plus_high
png(file = "plots/main/fig_2a.png", width=1000, height=800)
fig_count_gerp_plus_high
dev.off()
### Combine in one figure ####
cowplot::plot_grid(fig_count_gerp_plus_high, fig_count_snpef_plus_gerp,
ncol = 1, labels = c("a", "b"), label_fontface = "plain", label_size = 22,
align = "hv", axis = "lb") -> fig_mut_1
cowplot::plot_grid(fig_mut_1, fig_countsnpef_cat,
labels = c("", "c"), label_fontface = "plain", label_size = 22,
ncol = 2) -> fig_mut_2
cowplot::plot_grid(fig_af_gerp,
fig_af_high,
hist_n_gerp,
hist_n_high,
labels = c("d", "e", "f", "g"), label_fontface = "plain", label_size = 22,
ncol = 4,
align = "hv", axis = "lb") -> fig_mut_3
cowplot::plot_grid(fig_mut_2, fig_mut_3, rel_heights = c(1, 0.5),
ncol = 1,
align = "hv", axis = "lb") -> fig_mut
png(file = "plots/main/fig_2.png", width=1400, height=1200)
fig_mut
dev.off()
ggplot(n_mutations_per_impact, aes(x = median, y = type)) +
geom_segment(aes(x = quant_25, xend = quant_75, y = type), col = alpha(clr_grey, 0.7), size = 1) +
geom_point(size = 4, fill = clr_grey, col = "black", shape=21) +
labs(x = "GERP score", title = "") +
geom_vline(xintercept = 0, col = "darkred", linetype = "dotted") +
theme(axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(0.75,0.75,0.75,0, "cm")) -> fig_gerp_per_snpeff
fig_gerp_per_snpeff
fig_countsnpef+fig_gerp_per_snpeff-> fig_count_snpef_plus_gerp
png(file = "plots/main/fig_2b.png", width=1000, height=800)
fig_count_snpef_plus_gerp
dev.off()
### Combine in one figure ####
cowplot::plot_grid(fig_count_gerp_plus_high, fig_count_snpef_plus_gerp,
ncol = 1, labels = c("a", "b"), label_fontface = "plain", label_size = 22,
align = "hv", axis = "lb") -> fig_mut_1
cowplot::plot_grid(fig_mut_1, fig_countsnpef_cat,
labels = c("", "c"), label_fontface = "plain", label_size = 22,
ncol = 2) -> fig_mut_2
cowplot::plot_grid(fig_af_gerp,
fig_af_high,
hist_n_gerp,
hist_n_high,
labels = c("d", "e", "f", "g"), label_fontface = "plain", label_size = 22,
ncol = 4,
align = "hv", axis = "lb") -> fig_mut_3
cowplot::plot_grid(fig_mut_2, fig_mut_3, rel_heights = c(1, 0.5),
ncol = 1,
align = "hv", axis = "lb") -> fig_mut
png(file = "plots/main/fig_2.png", width=1400, height=1200)
fig_mut
dev.off()
ggplot(subset(allelefreq, Method == "GERP"), aes(x = frequency, fill = Deleteriousness, col = Deleteriousness)) +
# scale_y_continuous(breaks=(c(50000, 100000, 150000)),
#                    labels=c("50 k", "100 k", "150 k"))+
geom_histogram(aes(y=after_stat(c(count[group==1]/sum(count[group==1]),
count[group==2]/sum(count[group==2]))*100)),
binwidth=0.07, position="dodge") +
scale_color_manual(values = c("grey", clr_gerp)) +
scale_fill_manual(values = alpha(c("grey", clr_gerp), 0.7))+
labs(x = "Allele frequency", y = "Percentage of SNPs", title = "GERP") +
theme(legend.position = c(0.8,0.9),
legend.title = element_blank())-> fig_af_gerp
fig_af_gerp
png(file = "plots/main/fig_2d.png", width=600, height=600)
fig_af_gerp
dev.off()
ggplot(snpeff_af, aes(x = frequency, fill = Deleteriousness, col = Deleteriousness)) +
geom_histogram(aes(y=after_stat(c(count[group==1]/sum(count[group==1]),
count[group==2]/sum(count[group==2]))*100)),
binwidth=0.07, position="dodge") +
scale_color_manual(values = c("grey", clr_high)) +
scale_fill_manual(values = alpha(c("grey", clr_high), 0.7))+
labs(x = "Allele frequency", y = "Frequency", title = "SnpEff") +
theme(legend.position = c(0.8,0.9),
legend.title = element_blank())-> fig_af_high
png(file = "plots/main/fig_2e.png", width=600, height=600)
fig_af_high
dev.off()
### Combine in one figure ####
cowplot::plot_grid(fig_count_gerp_plus_high, fig_count_snpef_plus_gerp,
ncol = 1, labels = c("a", "b"), label_fontface = "plain", label_size = 22,
align = "hv", axis = "lb") -> fig_mut_1
cowplot::plot_grid(fig_mut_1, fig_countsnpef_cat,
labels = c("", "c"), label_fontface = "plain", label_size = 22,
ncol = 2) -> fig_mut_2
cowplot::plot_grid(fig_af_gerp,
fig_af_high,
hist_n_gerp,
hist_n_high,
labels = c("d", "e", "f", "g"), label_fontface = "plain", label_size = 22,
ncol = 4,
align = "hv", axis = "lb") -> fig_mut_3
cowplot::plot_grid(fig_mut_2, fig_mut_3, rel_heights = c(1, 0.5),
ncol = 1,
align = "hv", axis = "lb") -> fig_mut
png(file = "plots/main/fig_2.png", width=1400, height=1200)
fig_mut
dev.off()
png(file = "plots/main/fig_2.png", width=1500, height=1200)
fig_mut
dev.off()
ggplot(n_mutations_per_impact, aes(x = median, y = type)) +
geom_segment(aes(x = quant_25, xend = quant_75, y = type), col = alpha(clr_grey, 0.7), size = 1) +
geom_point(size = 4, fill = "black"", col = "black", shape=21) +
ggplot(n_mutations_per_impact, aes(x = median, y = type)) +
geom_segment(aes(x = quant_25, xend = quant_75, y = type), col = alpha(clr_grey, 0.7), size = 1) +
geom_point(size = 4, fill = "black"", col = "black", shape=21) +
ggplot(n_mutations_per_impact, aes(x = median, y = type)) +
geom_segment(aes(x = quant_25, xend = quant_75, y = type), col = alpha(clr_grey, 0.7), size = 1) +
geom_point(size = 4, fill = "black", col = "black", shape=21) +
labs(x = "GERP score", title = "") +
geom_vline(xintercept = 0, col = "darkred", linetype = "dotted") +
theme(axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
plot.margin = margin(0.75,0.75,0.75,0, "cm")) -> fig_gerp_per_snpeff
fig_gerp_per_snpeff
fig_countsnpef+fig_gerp_per_snpeff-> fig_count_snpef_plus_gerp
### Combine in one figure ####
cowplot::plot_grid(fig_count_gerp_plus_high, fig_count_snpef_plus_gerp,
ncol = 1, labels = c("a", "b"), label_fontface = "plain", label_size = 22,
align = "hv", axis = "lb") -> fig_mut_1
cowplot::plot_grid(fig_mut_1, fig_countsnpef_cat,
labels = c("", "c"), label_fontface = "plain", label_size = 22,
ncol = 2) -> fig_mut_2
cowplot::plot_grid(fig_af_gerp,
fig_af_high,
hist_n_gerp,
hist_n_high,
labels = c("d", "e", "f", "g"), label_fontface = "plain", label_size = 22,
ncol = 4,
align = "hv", axis = "lb") -> fig_mut_3
cowplot::plot_grid(fig_mut_2, fig_mut_3, rel_heights = c(1, 0.5),
ncol = 1,
align = "hv", axis = "lb") -> fig_mut
png(file = "plots/main/fig_2.png", width=1500, height=1200)
fig_mut
dev.off()
head(gerp_load)
#### SnpEff ###
high <- read.table("data/genomic/intermediate/snpef/ltet_ann_aa_snp_output_HIGH.vcf.gz")
names(high)
head(high)[1:10]
high <- left_join(high, genome[,c("contig", "scaf_nr")], by = c("V1" = "contig"))
head(high)[1:10,200]
head(genome)
head(high)[1]
length(unique(gerp$scaf_nr)
)
high <- read.table("data/genomic/intermediate/snpef/ltet_ann_aa_snp_output_HIGH.vcf.gz")
## metadata on filenames and ids
filenames <- fread("data/genomic/raw/metadata/idnames.fam")
ids <- fread("data/genomic/raw/metadata/file_list_all_bgi_clean.csv")
#merge
idnames <- left_join(filenames[,c("V1")], ids[,c("loc", "id")], by = c("V1" = "loc"))
names(high) <- c(c("CHROM", "POS", "ID", "REF", "ALT", "QUAL", "FILTER", "INFO","FORMAT"), idnames$id)#rename columns
# only select 29 largest autosomal scaffolds
scaf <- fread("data/genomic/refgenome/30_largest.scafs.tsv")
scaf$scaf <- gsub(":", ";", scaf$scaf)
scaf$scaf <- gsub("\\.", "=", scaf$scaf)
scaf <- subset(scaf, scaf_no != 4)
high <- subset(high, CHROM %in% scaf$scaf)
head(high)[1]
high <- left_join(high, genome[,c("contig", "scaf_nr")], by = c("V1" = "contig"))
high <- left_join(high, genome[,c("contig", "scaf_nr")], by = c("CHROM" = "contig"))
list_high <- data.frame()
list_high <- data.frame()
for (i in 1:length(unique(high$CHROM))){
sub_chr <- subset(high, CHROM == unique(high$CHROM)[i])
load_chr <- calculate_load_snpeff(vcf = sub_chr, output_vcf = F, loadtype = unique(gerp$scaf_nr)[i])
list_gerps <- rbind(list_gerps, load_chr)
}
list_high <- data.frame()
for (i in 1:length(unique(high$CHROM))){
sub_chr <- subset(high, CHROM == unique(high$CHROM)[i])
load_chr <- calculate_load_snpeff(vcf = sub_chr, output_vcf = F, loadtype = unique(high$CHROM)[i])
list_high <- rbind(list_gerps, load_chr)
}
per_chr_load <- left_join(list_gerps, list_high, by = "id")
per_chr_load <- left_join(list_gerps, list_high, by = c("id", "scaf_nr"))
head(list_gerps)
head(list_high)
per_chr_load <- left_join(list_gerps, list_high, by = c("id", "loadtype"))
summary(as.factor(list_gerps$loadtype))
summary(as.factor(list_high$loadtype))
View(scaf)
length(unique(high$CHROM)
)
high %>% select(c(CHROM, contig)) %>% unique()
high %>% select(c(CHROM, scaf_nr)) %>% unique()
high %>% select(c(CHROM, scaf_nr)) %>% unique() %>% arrange(scaf_nr)
gerp %>% select(c(chr, scaf_nr)) %>% unique() %>% arrange(scaf_nr)
### load GERP data ####
load(file = "output/load/gerp/gerp_over4.RData")
#### scaf name ####
load("data/genomic/raw/metadata/scaffold_names_dovetail.RData")
gerp <- left_join(gerp, genome[,c("contig", "scaf_nr")], by = c("chr" = "contig"))
#### load per chr ####
list_gerps <- data.frame()
for (i in 1:length(unique(gerp$chr))){
sub_chr <- subset(gerp, chr == unique(gerp$chr)[i])
load_chr <- calculate_load_gerp(vcf = sub_chr, output_vcf = F, loadtype = unique(gerp$scaf_nr)[i])
list_gerps <- rbind(list_gerps, load_chr)
}
### load packages ####
pacman::p_load(brms, bayesplot, tidyverse, ggridges, prismatic, ggpubr, extrafont, cowplot, performance, data.table, effects)
source("scripts/theme_ggplot.R")
#### only total #####
load(file = "../genetic_load_ltet/results/bayes_models/lms_gerp0_total_add_zi_29scaf.RData")
summary(brm_load_t_add_gerp0_lms)
list_gerps
#### SnpEff ###
high <- read.table("data/genomic/intermediate/snpef/ltet_ann_aa_snp_output_HIGH.vcf.gz")
## metadata on filenames and ids
filenames <- fread("data/genomic/raw/metadata/idnames.fam")
ids <- fread("data/genomic/raw/metadata/file_list_all_bgi_clean.csv")
#merge
idnames <- left_join(filenames[,c("V1")], ids[,c("loc", "id")], by = c("V1" = "loc"))
names(high) <- c(c("CHROM", "POS", "ID", "REF", "ALT", "QUAL", "FILTER", "INFO","FORMAT"), idnames$id)#rename columns
# only select 29 largest autosomal scaffolds
scaf <- fread("data/genomic/refgenome/30_largest.scafs.tsv")
scaf$scaf <- gsub(":", ";", scaf$scaf)
scaf$scaf <- gsub("\\.", "=", scaf$scaf)
scaf <- subset(scaf, scaf_no != 4)
high <- subset(high, CHROM %in% scaf$scaf)
high <- left_join(high, genome[,c("contig", "scaf_nr")], by = c("CHROM" = "contig"))
list_high <- data.frame()
length(unique(high$CHROM))
i=1
sub_chr <- subset(high, CHROM == unique(high$CHROM)[i])
load_chr <- calculate_load_snpeff(vcf = sub_chr, output_vcf = F, loadtype = unique(high$CHROM)[i])
load_chr
nrow(load_chr)
head(load_chr)
tail(load_chr)
vcf = sub_chr
output_vcf = F
loadtype = unique(high$CHROM)[i]
length(unique(high$scaf_nr))
unique(high$scaf_nr)[i]
length(unique(high$scaf_nr)
)
unique(high$scaf_nr)
loadtype = unique(high$scaf_nr)[i]
## metadata on filenames and ids
filenames <- fread("data/genomic/raw/metadata/idnames.fam")
ids <- fread("data/genomic/raw/metadata/file_list_all_bgi_clean.csv")
#merge
idnames <- left_join(filenames[,c("V1")], ids[,c("loc", "id")], by = c("V1" = "loc"))
names(vcf)
sub_chr[,-c(ncol(sub_chr))]
vcf = sub_chr[,-c(ncol(sub_chr))]
names(vcf)
#### load per chr ####
list_gerps <- data.frame()
for (i in 1:length(unique(gerp$chr))){
sub_chr <- subset(gerp, chr == unique(gerp$chr)[i])
load_chr <- calculate_load_gerp(vcf = sub_chr[,-c(ncol(sub_chr))], output_vcf = F, loadtype = unique(gerp$scaf_nr)[i])
list_gerps <- rbind(list_gerps, load_chr)
}
nrow(list_gerps)/190
list_high <- data.frame()
for (i in 1:length(unique(high$scaf_nr))){
sub_chr <- subset(high, scaf_nr == unique(high$scaf_nr)[i])
load_chr <- calculate_load_snpeff(vcf = sub_chr[,-c(ncol(sub_chr))], output_vcf = F, loadtype = unique(high$scaf_nr)[i])
list_high <- rbind(list_gerps, load_chr)
}
nrow(list_high)/190
per_chr_load <- full_join(list_gerps, list_high, by = c("id", "loadtype"))
nrow(per_chr_load)/190
View(per_chr_load)
### merge together
list_gerps$method = "gerp45"
list_high$method = "high"
per_chr_load <- rbind(list_gerps, list_high)
save(per_chr_load, file = "output/load/load_per_chr_snpeff_gerp.RData")
per_chr_load <- left_join(per_chr_load, pheno_wide, by = "id")
#### loop over chr to get output of model ####
n_mut <- unique(list_gerps[,c("loadtype", "n_total")])
summary_models <- data.frame()
summary(as.factor(as.numeric(as.character(per_chr_load$loadtype))))
method="gerp45"
chr="1"
head(per_chr_load)
load <- per_chr_load %>% filter(method == method & loadtype == chr)
head(load)
tail(load)
method
per_chr_load$method
method
method_arg="gerp45"
load <- per_chr_load %>% filter(method == method_arg & loadtype == chr)
# combine
pheno_wide_load <- left_join(pheno_wide, load, by = "id")
pheno_wide_load <- subset(pheno_wide_load, !is.na(total_load)) #some ids without genotypes, excluded for wgr
#### model ####
brm_load_t <- brm(LMS_min ~ scale(total_load) + core + (1|site), data = pheno_wide_load,
family = "zero_inflated_poisson",
prior = prior(normal(0,1), class = b),
cores =8, control = list(adapt_delta = 0.99, max_treedepth = 15),
iter = iter, thin = thin, warmup = warm, seed = 1908)
